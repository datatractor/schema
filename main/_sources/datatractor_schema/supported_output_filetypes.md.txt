# Slot: supported_output_filetypes


_An enumeration of the possible output formats of an `Extractor`. These should match `FileTypes` present in the registry. They can be specified on extractor execution using the templates described in the `Extractor->Usage->command` slot, [see the `Usage` class](Usage.md)._



URI: [datatractor_schema:supported_output_filetypes](https://datatractor.github.io/schema/main/datatractor_schema/supported_output_filetypes)



<!-- no inheritance hierarchy -->




## Applicable Classes

| Name | Description | Modifies Slot |
| --- | --- | --- |
[Extractor](Extractor.md) | A script, code, or web service that, when executed, can extract information f... |  no  |







## Properties

* Range: [SupportedFileType](SupportedFileType.md)

* Multivalued: True





## Identifier and Mapping Information







### Schema Source


* from schema: https://datatractor.github.io/schema/main/datatractor_schema/




## LinkML Source

<details>

```yaml
name: supported_output_filetypes
description: An enumeration of the possible output formats of an `Extractor`. These
  should match `FileTypes` present in the registry. They can be specified on extractor
  execution using the templates described in the `Extractor->Usage->command` slot,
  [see the `Usage` class](Usage.md).
from_schema: https://datatractor.github.io/schema/main/datatractor_schema/
rank: 1000
multivalued: true
alias: supported_output_filetypes
owner: Extractor
domain_of:
- Extractor
range: SupportedFileType
required: false

```

</details>